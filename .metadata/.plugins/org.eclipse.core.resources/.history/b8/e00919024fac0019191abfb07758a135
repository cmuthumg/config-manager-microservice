
package com.config.db.serivce.dbservices;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.config.db.serivce.bean.RequestBean;
import com.config.db.serivce.bean.ResponseBean;
import com.config.db.serivce.model.Offline;
import com.config.db.serivce.registry.AdapterService;
import com.config.db.serivce.repository.OfflineRepository;

@Service("offline")
public class OfflineService implements AdapterService<RequestBean, ResponseBean> {
	@Autowired
	OfflineRepository offlineRepository;

	@Override
	public ResponseBean getConfigData(String id, String status) {
		Offline data = null;
		if (status == null) {
			data = offlineRepository.findByServiceContextName(id);
		}
		data = offlineRepository.findByServiceContextNameAndStatus(id, status);
		return new ResponseBean(data.getServiceContextName(), data.getStatus(), data.getContent());
	}

	@Override
	public ResponseBean saveconfigData(RequestBean data) {
		Offline saveData = new Offline(data.getServiceContextName(), data.getStatus(), data.getContent());
		offlineRepository.save(saveData);
		return new ResponseBean(data.getServiceContextName(), data.getStatus(), data.getContent());
	}

	@Override
	public ResponseBean updateConfigData(RequestBean data) {

		Offline saveData = new Offline(data.getServiceContextName(), data.getStatus(), data.getContent());
		offlineRepository.save(saveData);
		return new ResponseBean(data.getServiceContextName(), data.getStatus(), data.getContent());
	}

	@Override
	public void deleteConfigData(RequestBean data) {
		Offline deleteData = new Offline(data.getServiceContextName(), data.getStatus(), data.getContent());
		offlineRepository.delete(deleteData);
	}

}
